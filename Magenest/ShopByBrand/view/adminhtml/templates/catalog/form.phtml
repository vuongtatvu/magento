<?php echo $block->getBrandTabsHtml(); ?>
<form id="edit_form" name="category-edit-form" action="<?php /* @escapeNotVerified */ echo $block->getSaveUrl() ?>" method="post"
      enctype="multipart/form-data">
    <div class="no-display">
        <input type="hidden" name="isIframe" value="1"/>
        <input name="form_key" type="hidden" value="<?php /* @escapeNotVerified */ echo $block->getFormKey() ?>"/>
        <input type="hidden" name="brand_products" id="in_brand_products" value=""/>
        <input type="hidden" name="active_tab_id" id="active_tab_id" value=""/>
    </div>
    <div id="brand_tab_content"></div>
</form>


<script>

    <?php if (($blockGrid = $block->getLayout()->getBlock('brand.tab.products')) && ($_gridJsObject = $blockGrid->getJsObjectName())) : ?>
    require([
        "mage/adminhtml/grid"
    ], function(){
        var categoryProducts = $H(<?php   echo $block->getProductsJson() ?>);
        $('in_brand_products').value = Object.toJSON(categoryProducts);

        function registerCategoryProduct(grid, element, checked){

            if(checked){
                if(element.positionElement) {
                    element.positionElement.disabled = false;
                    categoryProducts.set(element.value, element.positionElement.value);
                }
            }
            else{
                if(element.positionElement){
                    element.positionElement.disabled = true;
                }
                categoryProducts.unset(element.value);
            }
            $('in_brand_products').value = Object.toJSON(categoryProducts);
            grid.reloadParams = {'selected_products[]':categoryProducts.keys()};
            addproductbrand(element, checked,categoryProducts);
        }
        function categoryProductRowClick(grid, event){
            var trElement = Event.findElement(event, 'tr');
            var isInput   = Event.element(event).tagName == 'INPUT';
            if(trElement){
                var checkbox = Element.getElementsBySelector(trElement, 'input');
                if(checkbox[0]){
                    var checked = isInput ? checkbox[0].checked : !checkbox[0].checked;
                    <?php /* @escapeNotVerified */ echo $_gridJsObject ?>.setCheckboxChecked(checkbox[0], checked);
                }
            }
        }
        function positionChange(event){
            var element = Event.element(event);
            if(element && element.checkboxElement && element.checkboxElement.checked){
                categoryProducts.set(element.checkboxElement.value, element.value);
                $('in_brand_products').value = Object.toJSON(categoryProducts);
            }
        }

        var tabIndex = 1000;
        function categoryProductRowInit(grid, row){
            var checkbox = $(row).getElementsByClassName('checkbox')[0];
            var position = $(row).getElementsByClassName('input-text')[0];
            if(checkbox && position){
                checkbox.positionElement = position;
                position.checkboxElement = checkbox;
                position.disabled = !checkbox.checked;
                position.tabIndex = tabIndex++;
                Event.observe(position,'keyup',positionChange);
            }
        }

        <?php /* @escapeNotVerified */ echo $_gridJsObject ?>.rowClickCallback = categoryProductRowClick;
        <?php /* @escapeNotVerified */ echo $_gridJsObject ?>.initRowCallback = categoryProductRowInit;
        <?php /* @escapeNotVerified */ echo $_gridJsObject ?>.checkboxCheckCallback = registerCategoryProduct;
        if(<?php /* @escapeNotVerified */ echo $_gridJsObject ?>.rows) {
            <?php /* @escapeNotVerified */ echo $_gridJsObject ?>.rows.each(function(row){categoryProductRowInit(<?php /* @escapeNotVerified */ echo $_gridJsObject ?>, row)});
        }
    });
        <?php endif; ?>


</script>